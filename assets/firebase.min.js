$(document).ready(function () {
    let e = $("#txtRootUrl").val();
    var t = null, n = "", a = "";

    let o = async () => {
        let e = await i();
        if (t = e.firebaseConfig, a = e.UserID, n = e.fcmToken, "" != a) {
            firebase.initializeApp(t);
            const messaging = firebase.messaging(); // Initialize messaging here

            // Check current permission status
            if (Notification.permission === 'default') {
                // Request permission from the user
                requestNotificationPermission(messaging);
            } else if (Notification.permission === 'granted') {
                // If permission was already granted, proceed
                s(messaging);
            } else {
                alert('Please enable notifications in your browser settings to receive updates.');
            }

            // Handle incoming messages
            messaging.onMessage(function (e) {
                var t = e.data.title, n = {
                    body: e.data.body,
                    icon: e.data.icon,
                    image: e.data.image,
                    data: {time: new Date(Date.now()).toString(), click_action: e.data.click_action}
                };
                new Notification(t, n);
            });
        }
    };

    // Function to request notification permission
    const requestNotificationPermission = (messaging) => {
        Notification.requestPermission().then(permission => {
            if (permission === 'granted') {
                // Permission granted, get the FCM token
                s(messaging);
            } else {
                // Handle permission denied case
                alert('Notification permission denied. Please enable notifications in your browser settings.');
            }
        }).catch(function (e) {
            console.log("Unable to get permission to notify.", e);
        });
    };

    let i = async () => await new Promise((t, n) => {
        $.ajax({
            type: "post",
            url: e + "firebase/get/firebase-config",
            headers: {"X-CSRF-Token": $("meta[name=_token]").attr("content")},
            dataType: "json",
            async: !0,
            error() {
                t(null);
            },
            success(e) {
                t(e);
            }
        });
    });

    let c = async t => {
        "" != a && $.ajax({
            type: "post",
            url: e + "firebase/fcm-token/save",
            headers: {"X-CSRF-Token": $("meta[name=_token]").attr("content")},
            data: {fcmToken: t, UserID: a},
            dataType: "json",
            async: !0
        });
    };

    let s = async (messaging) => { // Pass messaging as a parameter
        messaging.getToken().then(function (e) {
            e ? (n = e, c(e)) : (console.log("No Instance ID token available. Request permission to generate one."), setTokenSentToServer(!1));
        }).catch(function (e) {
            console.log("An error occurred while retrieving token. ", e), setTokenSentToServer(!1);
        });
    };

    o();
});
